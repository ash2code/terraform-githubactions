name: 'Terraform sample code'

on:
  push:
    branches: [ "main" ]

jobs:
  terraform-setup:
    name: 'Terraform Setup'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    env:
      AWS_REGION: 'us-east-1'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Files List
        run: ls -al

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Checking Terraform Version
        run: terraform version

  terraform-init:
    name: 'Terraform Infrastructure initialization'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-setup

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: check all files
        run:  ls -al

      - name: open lock file
        run:  cat .terraform.lock.hcl

  terraform-plan:
    name: 'Terraform Infrastructure Plan'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-init

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

  terraform-format:
    name: 'Terraform Format'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-plan

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Format
        run: terraform fmt -recursive

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-format

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Apply
        run: terraform apply -auto-approvename: 'Terraform sample code'

on:
  push:
    branches: [ "main" ]

jobs:
  terraform-setup:
    name: 'Terraform Setup'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    env:
      AWS_REGION: 'us-east-1'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Files List
        run: ls -al

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Checking Terraform Version
        run: terraform version

  terraform-init:
    name: 'Terraform Infrastructure initialization'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-setup

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: check all files
        run:  ls -al

      - name: open lock file
        run:  cat .terraform.lock.hcl

  terraform-plan:
    name: 'Terraform Infrastructure Plan'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-init

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

  terraform-format:
    name: 'Terraform Format'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-plan

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Format
        run: terraform fmt -recursive

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-format

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Apply
        run: terraform apply -auto-approve
