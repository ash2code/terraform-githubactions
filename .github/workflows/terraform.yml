name: Terraform

on:
  push:
    branches: 
      - main
  #schedule: 
  #  - cron: '0/5 * * * *'

permissions:
  contents: read

env:
  name: dev
  TERRAFORM_DESTROY: 'NO'
  ACTIONS_STEP_DEBUG: true
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  terraform-check:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      # - name: Send GitHub Action trigger data to Slack workflow
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.26.0
      #   with:
      #     channel-id: github-actions-demo
      #     payload: |
      #       {
      #         "text": "Deployment started (In Progress)"
      #       }
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
  terraform_init:
    name: terraform init
    runs-on: ubuntu-latest
    needs: ["terraform-check"]

    defaults:
      run:
        shell: bash

    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: Terraform Init
        run: terraform init
  
  terraform_plan:
    name: terraform plan
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: code checkout
        uses: actions/checkout@v4
        needs: ["terraform-init"]

      - name: Terraform Init and plan
        run: terraform init && terraform plan

  terraform_apply:
    name: terraform apply
    runs-on: ubuntu-latest
    needs: ["terraform-plan"]

    defaults:
      run:
        shell: bash

    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: Terraform Init and apply
        run: terraform init && terraform apply

  terraform_destroy:
    name: terraform destroy
    runs-on: ubuntu-latest
    needs: ["terraform-check"]
    if: ${{ env.TERRAFORM_DESTROY == 'yes' }}

    defaults:
      run:
        shell: bash

    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: Terraform Init and destroy
        run: terraform init && terraform destroy --auto-approve
